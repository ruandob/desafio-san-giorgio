plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ruandob'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.postgresql:postgresql:42.7.4'
	implementation 'org.mapstruct:mapstruct:1.6.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	testImplementation 'com.h2database:h2:2.3.232'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.withType(JavaCompile) {
	options.annotationProcessorPath = configurations.annotationProcessor
	options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
}

tasks.named('test') {
	useJUnitPlatform()
}
